service: aws-serverless-todo-app
frameworkVersion: '3'


custom:
  myStage: ${opt:stage, self:provider.stage}
  settings:
    dev:
      ITEMS_DYNAMODB_TABLE: sls-basic-operations-items-dev
    qa:
      ITEMS_DYNAMODB_TABLE: sls-basic-operations-items-qa

provider:
  name: aws
  runtime: nodejs14.x
  region: us-east-1
  environment: ${self:custom.settings.${self:custom.myStage}}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource:
        - arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.settings.${self:custom.myStage}.ITEMS_DYNAMODB_TABLE}

functions:
  addTodo:
    handler: src/addTodo.handler
    events:
      - http:
          path: /
          method: post
          cors: true
  fetchTodos:
    handler: src/fetchTodos.handler
    events:
      - http:
          path: /todos
          method: get
          cors: true
  fetchTodo:
    handler: src/fetchTodo.handler
    events:
      - http:
          path: /todo/{id}
          method: get
          cors: true
  updateTodo:
    handler: src/updateTodo.handler
    events:
      - http:
          path: /todo/{id}
          method: patch
          cors: true
  deleteTodo:
    handler: src/deleteTodo.handler
    events:
      - http:
          path: /todo/{id}
          method: delete
          cors: true


resources:
  Resources:
    TodoTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.settings.${self:custom.myStage}.ITEMS_DYNAMODB_TABLE}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH

